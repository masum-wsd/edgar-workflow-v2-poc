#  servlet:
#    context-path: /masum 

server:
  port: 8080
  tomcat:
    max-connections: 2000
    accept-count: 200

spring:
  # Spring Security Configuration
  security:
    user:
      name: masum
      password: password
  # To return error response RFC 7807 compliant
  mvc:
    problemdetails:
      enabled: true
  # Spring Servlet Configuration
  servlet:
    multipart:
      enabled: true
      max-file-size: 100MB
      max-request-size: 100MB
  # Spring Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/data_jpa
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
    hikari:
      auto-commit: true
      connection-timeout: 30000 # 30 seconds
      maximum-pool-size: 10
      minimum-idle: 10
      idle-timeout: 600000 # 10 minutes
      max-lifetime: 1800000 # 30 minutes
      leak-detection-threshold: 60000 # 1 minute # disable it in production
      data-source-properties:
        cachePrepStmts: true
        useServerPrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
  # Spring JPA & Hibernate Configuration
  jpa:
    open-in-view: false
    generate-ddl: true
    hibernate:
      ddl-auto: validate
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        jdbc:
          time_zone: UTC
          lob:
            non_contextual_creation: true
          batch_size: 20
        order_inserts: true
        order_updates: true
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: true
        use_sql_comments: true
        generate_statistics: false
  # Spring SQL initialization configuration
  sql:
    init:
      mode: always
  # Spring Liquibase Configuration
  liquibase:
    change-log: classpath:db/changelog/changelog-master.yml
    enabled: true  # false in production
  

# Actuator Configuration
management:
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
  observations:
    key-values:
      application: ${spring.application.name}
  tracing:
    sampling:
      probability: 1.0
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,prometheus,env,metrics,beans,loggers,info
        
# Swagger Configuration      
springdoc:
  api-docs:
    path: /v1/wsd
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    oauth:
      use-pkce-with-authorization-code-grant: true
  show-actuator: true

# Default Logging configuration
logging:
  level:
    org:
      hibernate:
        sql: debug
    root: warn
    console:
      level: warn  
  